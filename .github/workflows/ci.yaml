name: CI Pipeline for Daydream Travel System

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Unit Tests
        run: |
          pytest tests/unit --junitxml=unit-results.xml

      - name: Upload Unit Test Results
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: unit-results.xml

  integration-tests:
  runs-on: ubuntu-latest
  needs: unit-tests

  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r Daydream_Travel_System_Testing/requirements.txt

    - name: Run Flask in Background
      run: |
        cd Daydream_Travel_System_Testing
        nohup python app.py > flask.log 2>&1 &
        sleep 5

    - name: Run Integration Tests
      run: |
        pytest tests/integration --junitxml=integration-results.xml

    - name: Upload Integration Test Results
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-results
        path: integration-results.xml

  ui-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          sudo apt-get update
          sudo apt-get install -y chromium-browser
          echo "CHROME_BIN=$(which chromium-browser)" >> $GITHUB_ENV

      - name: Run Flask App in Background
        run: |
          nohup python app.py & sleep 5

      - name: Run UI Tests with Selenium
        run: |
          pytest tests/ui --junitxml=ui-results.xml

      - name: Upload UI Test Results
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results
          path: ui-results.xml
